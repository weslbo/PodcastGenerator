[Brian]: So Emma, once we have content in a pipeline stage, how do we deploy it to the next stage?
[Emma]: To deploy content to the next stage in the deployment pipeline, you simply select the deploy button at the bottom of the stage.
[Brian]: That sounds straightforward. And how can we track when content was last deployed to a stage?
[Emma]: When reviewing the test and production stage cards, you can see the last deployment time. This indicates the last time content was deployed to the stage.
[Brian]: Ah, that's useful. It helps to establish when a stage was last updated. Is there any other benefit to knowing the deployment time?
[Emma]: Yes, it can also be helpful if you want to track the time between test and production deployments.
[Brian]: I see. So, when two sequential stages have content, how is the content compared between them?
[Emma]: The content is compared based on the content item's metadata. This comparison doesn't include comparing data or refresh time between stages.
[Brian]: That makes sense. And how can we quickly see the differences between two sequential stages?
[Emma]: A comparison icon indicator appears between the stages, allowing for a quick visual insight into the differences. The icon has two states: one indicating that the content items have different metadata or a difference in the number of items, and the other indicating that the content in both stages is identical.
[Brian]: That's helpful. And if there are differences between stages, is there a way to view the changes or differences between items?
[Emma]: Yes, when two sequential stages aren't the same, a link appears underneath the comparison icon. Clicking the link opens the content item list in both stages in Compare view, which shows the changes or differences between items.
[Brian]: Great. Now, let's talk about customization of stages. Can different stages have different configurations?
[Emma]: Absolutely. Different stages can have different configurations, such as different databases or query parameters. For example, the development stage might query sample data from the database, while the test and production stages query the entire database.
[Brian]: That's interesting. How can we configure deployment rules to allow changes to content when deploying between stages?
[Emma]: To configure deployment rules, you can define rules for specific items in a production stage. Once defined, content deployed from test to production will inherit the defined values and always apply them as long as the rule is unchanged and valid.
[Brian]: I see. That provides flexibility in managing content deployment. Now, let's talk about permissions. How do pipeline permissions and workspace permissions work together?
[Emma]: Pipeline permissions and workspace permissions are granted and managed separately. However, to deploy content, you need both pipeline access and workspace member permissions.
[Brian]: That makes sense. So, if someone has pipeline access but not workspace permissions, what can they do?
[Emma]: They can view the pipeline and share it with others, but they won't be able to view the content of the workspace in the pipeline or perform deployments.
[Brian]: Got it. And when deploying Power BI items, does the ownership of the deployed item change?
[Emma]: Yes, the ownership of the deployed item may change. For example, when deploying a dataset, the user who made the deployment becomes the owner. However, the ownership remains unchanged when deploying to a stage with the same Power BI item.
[Brian]: I see. Managing permissions at both the pipeline and workspace level allows for different people to work on them with different permissions. It provides control over who can do what.
[Emma]: Exactly. It helps streamline and manage the deployment process, especially for larger applications with multiple contributors.
[Brian]: That's an excellent insight, Emma. Thank you for sharing all this information about implementing analytics solutions using Microsoft Fabric.
[Emma]: You're welcome, Brian. It was my pleasure to be here and share my knowledge.